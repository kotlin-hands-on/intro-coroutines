import org.jetbrains.kotlin.gradle.dsl.JvmTarget

plugins {
    id 'org.jetbrains.kotlin.jvm' version '2.1.10'
    id 'org.jetbrains.kotlin.plugin.serialization' version '2.1.10'
}

group 'intro-coroutines'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.8.0")

    def coroutines_version = '1.10.1'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-swing:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-slf4j:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-debug:$coroutines_version"

    implementation 'ch.qos.logback:logback-classic:1.5.16'

    def retrofit_version = '2.11.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:retrofit-mock:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-kotlinx-serialization:$retrofit_version"
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'

    implementation 'io.reactivex.rxjava3:rxjava:3.1.10'
    implementation 'io.reactivex.rxjava3:rxkotlin:3.0.1'
    implementation "com.squareup.retrofit2:adapter-rxjava3:$retrofit_version"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.12.0'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.12.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.12.0'
}

compileKotlin {
    compilerOptions {
        jvmTarget.set(JvmTarget.JVM_21)
        freeCompilerArgs.add("-opt-in=kotlin.RequiresOptIn")
    }
}

compileTestKotlin {
    compilerOptions {
        jvmTarget.set(JvmTarget.JVM_21)
        freeCompilerArgs.add("-opt-in=kotlin.RequiresOptIn")
    }
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}

test {
    useJUnitPlatform()
}

sourceSets {
    main.kotlin.srcDirs = ['src']
    main.resources.srcDirs = ['resources']
    test.kotlin.srcDirs = ['test']
}